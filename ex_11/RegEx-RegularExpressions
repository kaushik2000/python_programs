// Source : https://www.w3schools.com/python/python_regex.asp
Import the re module:
    import re

RegEx Functions:
    findall     :    Returns a list containing all matches
    search      :    Returns a Match object if there is a match anywhere in the string
    split       :    Returns a list where the string has been split at each match
    sub         :    Replaces one or many matches with a string

Metacharacters:
    []  :   A set of characters | Eg : "[a-m]" 	
    \   :   Signals a special sequence (can also be used to escape special characters) | Eg : "\d" 	
    .   :   Any character (except newline character) | Eg : "he..o" 	
    ^   :   Starts with | Eg : "^hello" 	
    $   :   Ends with | Eg : "world$" 	
    *   :   Zero or more occurrences | Eg : "aix*" 	
    +   :   One or more occurrences | Eg : "aix+" 	
    {}  :   Exactly the specified number of occurrences | Eg : "al{2}" 	
    |   :   Either or | Eg : "falls|stays" 	
    ()  :   Capture and group

Special Sequences:
    \A  :   Returns a match if the specified characters are at the beginning of the string | Eg : "\AThe" 	
    \b  :   Returns a match where the specified characters are at the beginning or at the end of a word (the "r" in the beginning is making sure that the string is being treated as a "raw string") | Eg : r"\bain", r"ain\b"
    \B  :   Returns a match where the specified characters are present, but NOT at the beginning (or at the end) of a word(the "r" in the beginning is making sure that the string is being treated as a "raw string") | Eg : r"\Bain", r"ain\B"
    \d  :   Returns a match where the string contains digits (numbers from 0-9) | Eg : "\d" 	
    \D  :   Returns a match where the string DOES NOT contain digits | Eg : "\D" 	
    \s  :   Returns a match where the string contains a white space character | Eg : "\s" 	
    \S  :   Returns a match where the string DOES NOT contain a white space character | Eg : "\S" 	
    \w  :   Returns a match where the string contains any word characters (characters from a to Z, digits from 0-9, and the underscore _ character) | Eg : "\w" 	
    \W  :   Returns a match where the string DOES NOT contain any word characters | Eg : "\W" 	
    \Z  :   Returns a match if the specified characters are at the end of the string | Eg : "Spain\Z"

Sets:                           
    [arn]       :   Returns a match where one of the specified characters (a, r, or n) are present 	
    [a-n]       :   Returns a match for any lower case character, alphabetically between a and n 	
    [^arn]      :   Returns a match for any character EXCEPT a, r, and n 	
    [0123]      :   Returns a match where any of the specified digits (0, 1, 2, or 3) are present 	
    [0-9]       :   Returns a match for any digit between 0 and 9 	
    [0-5][0-9]  :   Returns a match for any two-digit numbers from 00 and 59 	
    [a-zA-Z]    :   Returns a match for any character alphabetically between a and z, lower case OR upper case 	
    [+]         :   In sets, +, *, ., |, (), $,{} has no special meaning, so [+] means: return a match for any + character in the string

// Source : https://www.py4e.com/lectures3/Pythonlearn-11-Regex-Handout.txt
Python Regular Expression Quick Guide:
    ^         :   Matches the beginning of a line
    $         :   Matches the end of the line
    .         :   Matches any character
    \s        :   Matches whitespace
    \S        :   Matches any non-whitespace character
    *         :   Repeats a character zero or more times
    *?        :   Repeats a character zero or more times (non-greedy)
    +         :   Repeats a character one or more times
    +?        :   Repeats a character one or more times (non-greedy)
    [aeiou]   :   Matches a single character in the listed set
    [^XYZ]    :   Matches a single character not in the listed set
    [a-z0-9]  :   The set of characters can include a range
    (         :   Indicates where string extraction is to start
    )         :   Indicates where string extraction is to end

